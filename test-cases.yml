---
- summary: | 
    Проверка возможности игры без регистрации
  requirement: |
    Пользователь должен иметь возможность сыграть пробную игру без регистрации.
  prerequisites: | 
    Открыта страница https://codebattle.hexlet.io/
  test-data: | 
    Не требуется
  steps:
    - Нажать на "Try Simple Battle"
  expected-result: Пользователь успешно переходит в игру с ботом.

- summary: |
    Проверка регистрации нового пользователя
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться.
  prerequisites: |
    Открыта страница регистрации.
  test-data: |
      Имя = testuser1
      Email = testuser@example.com
      Пароль = password123
  steps:
    - Ввести имя пользователя.
    - Ввести email.
    - Ввести пароль.
    - Нажать кнопку регистрации.
  expected-result: |  
    Пользователь успешно зарегистрирован.

- summary: |
    Проверка регистрации существующего пользователя
  requirement: |
      Пользователь должен иметь возможность зарегистрироваться.
  prerequisites: |
    Открыта страница регистрации.
  test-data: |
      Имя = testuser1/testuser2
      Email = testuser@example.com
      Пароль = password123
  steps:
    - Ввести имя пользователя.
    - Ввести email.
    - Ввести пароль.
    - Нажать кнопку регистрации.
  expected-result: |  
    Пользователь не зарегестрирован, появляется надпись о том что пользователь с данным именем/почтой существует.

- summary: | 
    Проверка авторизации через GitHub
  requirement: |
    Пользователь должен иметь возможность регистрации и входа в систему, в том числе через социальные сети или сервисы (например, Github, Discord).
  prerequisites: | 
    Открыта главная страница сайта.
  test-data: | 
    Аккаунт GitHub, имеющий доступ к сайту.
  steps:
    - Нажать на кнопку «Sign in with GitHub».
    - Выбрать аккаунт GitHub для авторизации.
  expected-result: Пользователь успешно авторизован.

- summary: | 
    Проверка авторизации через Discord
  requirement: |
    Пользователь должен иметь возможность регистрации и входа в систему, в том числе через социальные сети или сервисы (например, Github, Discord).
  prerequisites: | 
    Открыта главная страница сайта.
  test-data: | 
    Аккаунт Discord, имеющий доступ к сайту.
  steps:
    - Нажать на кнопку «Sign in with Discord».
    - Выбрать аккаунт Discord для авторизации.
  expected-result: Пользователь успешно авторизован.

- summary: | 
    Проверка восстановления пароля
  requirement: |
    На сайте должна быть возможность восстановления пароля..
  prerequisites: | 
    Открыта главная страница сайта. Есть существующий аккаунт
  test-data: | 
    Не требуются
  steps:
    - Нажать на кнопку "Sign in".
    - Нажать на кнопку "Forgot your password?".
    - Ввести почту указанную при регистрации и нажать "Submit".
  expected-result: Пользователь видит сообщение "We have sent you an email with instructions on how to reset your password", на почту приходит ссылка для восстановления пароля.

- summary: | 
    Проверка изменения данных профиля
  requirement: |
    Пользователь должен иметь возможность менять имя и редактировать свой профиль.
  prerequisites: | 
    Пользователь зарегистрирован и вошел в систему.
  test-data: | 
    Имя = testuser1
    Имя для изменения = testuser123
    Клан = testclan
  steps:
    - Нажать на кнопку «Settings».
    - В поле "Your name" меняем имя пользователя
    - В поле "Your weapon" выбираем язык программирования
    - В поле "Your clan" пишем название клана
  expected-result: Пользователь успешно изменил данные.

- summary: | 
    Создание игры с модификаторами
  requirement: |
    Пользователь должен иметь возможность создавать игру с выбором языка программирования и различными модификаторами (сложность, выбор оппонента, лимит времени, тип задания).
  prerequisites: | 
    Пользователь зарегистрирован и вошел в систему.
  test-data: |
    Level = 1 звезда
    Time control = 30 min
    Оппонент = Бот
    Задача = cube_sum
  steps:
    - Нажать кнопку «Create a game».
    - Выбрать язык программирования.
    - Настроить параметры игры (сложность, оппонент, лимит времени, задача).
    - Нажать кнопку «Create battle».
  expected-result: Игра успешно создана, пользователь перенаправлен на страницу игры.

- summary: | 
    Проверка приглашения пользователя в игру
  requirement: |
    Пользователь должен иметь возможность отправлять приглашение на игру другим пользователям.
  prerequisites: | 
    Пользователи зарегистрированы и вошли в систему.
  test-data: | 
    Не требуется.
  steps:
    - На главной странице нажать на иконку "Send battle invite"
    - В открывшемся списке выбрать пользователя
    - Выбрать все необходимые параметры для игры и нажать "Create invite"
  expected-result: | 
    Пользователю успешно приходит приглашение в игру

- summary: | 
    Проверка сортировки таблицы лидеров
  requirement: |
    Пользователь должен иметь возможность просматривать и сортировать таблицу лидеров (по рейтингу, количеству игр и т.д.).
  prerequisites: | 
    Открыта главная страница сайта. 
  test-data: | 
    Не требуется
  steps:
    - Найти таблицу лидеров на главной странице и нажать на кнопку "Top list"
    - В открывшейся вкладке "Users rating" выбрать период (Weekly, Monthly, Total)
    - Отсортировать таблицу по рангу
    - Отсортировать таблицу по рейтингу
    - Отсортировать таблицу по количеству игр
    - Отсортировать таблицу по дате регистрации
  expected-result: |
    Таблица лидеров корректно сортирует пользователей по параметрам

- summary: | 
    Проверка создания турнира
  requirement: |
    Пользователь должен иметь возможность организовывать турниры и создавать турнирные сетки.
  prerequisites: | 
    Пользователь зарегистрирован и вошел в систему.
    Открыта главная страница сайта.
  test-data: | 
    Не требуется
  steps:
    - Открыть вкладку "Tournaments" 
    - Заполнить неоюходимые поля произвольными данными
    - Нажать кнопку "Create"
  expected-result: |
    Турнир успешно создан, открыта страница турнира
  
- summary: | 
    Проверка возможности победить в игре
  requirement: |
    Победителем должен быть пользователь, который верно решил задачу и затратил на это меньше времени.
  prerequisites: | 
    Создана и начата игра "rect_area" против бота 
  test-data: | 
    const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;
  steps:
    - В меню игры вставить код в окно терминала
    - Нажать "Run"
  expected-result: Пользователь побеждает, высвечивается поздравляющее окно
  
- summary: | 
    Проверка возможности просмотра истории игр
  requirement: |
    Пользователь должен иметь возможность просматривать историю своих игр и турниров.
  prerequisites: | 
    Минимум одна сыгранная игра
  test-data: | 
    Не требуются
  steps:
    - Перейти во вкладку "My Prifile".
    - Нажать на кнопку "Completed games"
    - Выбрав интересующую игру нажать на кнопку "Show"
  expected-result: Пользователь успешно переходит в историю своих игр и может посмотреть результаты.

- summary: | 
    Проверка возможности просмотра статистики игр
  requirement: |
    Пользователь должен иметь возможность просматривать статистику по играм, турнирам и игрокам.
  prerequisites: | 
    Минимум одна сыгранная игра.
  test-data: | 
    Не требуются.
  steps:
    - Перейти во вкладку "My Prifile".
    - Нажать на кнопку "Completed games"
  expected-result: Пользователь успешно переходит в статистику игр.
  
- summary: | 
    Проверка возможности просмотра кода соперника во время игры
  requirement: |
    Пользователь должен иметь возможность просматривать код соперника во вреия игры.
  prerequisites: | 
    Открыта главная страница сайта, пользователь авторизован.
  test-data: | 
    Не требуются
  steps:
    - На главной странице нажать на кнопку "Create a game"
    - Начать игру с произвольными настройками против бота
  expected-result: Пользователь успешно перенаправлен на страницу игры, на странице окна кода пользователя и противника, редактируемые в онлайн режиме.

- summary: | 
    Проверка возможности сдаться
  requirement: |
    Пользователь должен иметь возможность сдаться, сбросить код или проверить решение в терминале.
  prerequisites: | 
    Начата игра с проищвольными настройками
  test-data: | 
    Не требуются
  steps:
    - В начатой игре нажать "Give up".
    - Подтвердить действие нажатием кнопки "Give up"
  expected-result: Пользователь проигрывает, всплывает окно с кнопкой "I'll be back".

- summary: | 
    Поверка возможности сбросить код
  requirement: |
    Пользователь должен иметь возможность сдаться, сбросить код или проверить решение в терминале.
  prerequisites: | 
    Начата игра с проищвольными настройками.
  test-data: | 
    Не требуются
  steps:
    - В начатой игре в окне терминала вписать любые цифры/буквы
    - Нажать на кнопку "Reset solution"
  expected-result: Пользователь успешно сбрасывает код.

- summary: | 
    Успешная проверка решения в терминале
  requirement: |
    Пользователь должен иметь возможность сдаться, сбросить код или проверить решение в терминале.
  prerequisites: | 
    Создана и начата игра "rect_area" против бота 
  test-data: | 
    const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;
  steps:
    - В меню игры вставить код в окно терминала
    - Нажать "Run"
  expected-result: Пользователь побеждает, высвечивается поздравляющее окно

- summary: | 
    Неуспешная проверка решения в терминале
  requirement: |
    Пользователь должен иметь возможность сдаться, сбросить код или проверить решение в терминале.
  prerequisites: | 
    Создана и начата игра "rect_area" против бота 
  test-data: | 
    const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width + length;
    };
    module.exports = solution;
  steps:
    - В меню вставить код в окно терминала
    - Нажать "Run"
  expected-result: Пользователь получает сообщение о провале тестов в окне "Output"

- summary: | 
    Проверка возможности переиграть матч.
  requirement: |
    Пользователь должен иметь возможность переиграть матч.
  prerequisites: | 
    Начата игра с произвольными настройками.
  test-data: | 
    Не требуются
  steps:
    - В начатой игре проиграть по времени или сдаться.
    - Нажать на кнопку "Rematch"
  expected-result: Пользователь успешно запускает матч заново.

- summary: | 
    Проверка работы чата.
  requirement: |
    На сайте должен быть чат и возможность отправлять личные сообщения другим игрокам.
  prerequisites: | 
    Открыта главная страница сайта, пользователь авторизован.
  test-data: | 
    Не требуются.
  steps:
    - На главной странице, в чате отправить сообщение "Привет"
  expected-result: Пользователь успешно отправляет сообщение в чат, все пользователи онлайн видят сообщение.
  
- summary: | 
    Проверка работы личных сообщений.
  requirement: |
   На сайте должен быть чат и возможность отправлять личные сообщения другим игрокам.
  prerequisites: | 
    Пользователи зарегистрированы и вошли в систему.
  test-data: | 
    Не требуются
  steps:
    - На главной странице найти кнопку "Send Message".
    - В открывшемся списке игроков онлайн выбрать пользователя.
    - Написать "Привет" в окне чата
  expected-result: Пользователь успешно отправляет личное сообщение, его видят только два участника чата.

- summary: | 
    Проверка добавления новых заданий
  requirement: |
    На сайте должна быть возможность добавлять новые задания.
  prerequisites: | 
    Открыта главная страница сайта, пользователь авторизован.
  test-data: | 
    Не требуется
  steps:
    - Нажать на иконку профиля
    - В меню выбрать пункт "Tasks"
    - На следующей странице нажать "Create task"
    - Написать условия для задачи
    - Нажать на кнопку "Save"
  expected-result: Пользователь успешно создал задачу.

- summary: | 
    Проверка просмотра игры онлайн
  requirement: |
    Пользователи должны иметь возможность просматривать игры других пользователей онлайн.
  prerequisites: | 
    Открыта главная страница сайта, пользователь авторизован.
  test-data: | 
    Не требуется
  steps:
    - В меню лобби найти начавшуюся игру.
    - Нажать кнопку "Show"
  expected-result: Пользователь успешно переходит в игру в качестве зрителя.

- summary: | 
    Проверка переключения на другой поединок во время игры
  requirement: |
    Пользователь может находиться только в одном поединке одновременно.
  prerequisites: | 
    Создана и начата игра.
  test-data: | 
    Не требуется
  steps:
    - В режиме игры нажать на кнопку "Back to Home"
    - Создать еще одну игру или присоединиться к существующей
  expected-result: Пользователь при присоединении к игре получает ошибку "already_in_a_game", нет возможности создания новой игры.

- summary: | 
    Проверка внесения изменений в коде в качестве зрителя
  requirement: |
    У зрителей не должно быть возможности писать код и вносить изменения в терминалы участников игры.
  prerequisites: | 
    Открыта главная страница сайта.
  test-data: | 
    Не требуется
  steps:
    - Подключиться к существующей игре в качестве зрителя
    - Внести изменения в коде в терминале участников
  expected-result: Изменений в коде участников батла нет.

- summary: | 
    Проверка внесения изменений в коде в терминале соперника
  requirement: |
    Участник игры не может писать код в терминале соперника и изменять его.
  prerequisites: | 
    Создана и начата игра.
  test-data: | 
    Не требуется
  steps:
    - В окне терминала противника внести изменения в коде
  expected-result: Код соперника не изменился.
